# (Built-in defaults for the arti configuration format.)

# Default port to use when listening to SOCKS connections.  We always
# listen on localhost.
socks_port = 9150

# Whether to log at the "trace" debugging level.  By default, we log at
# "debug".
trace = false

# Locations to use for storing things on disk.
#
# These paths can use ~ to indicate the user's home directory, or a set
# of shell-style variables to indicate platform-specific paths.
#
# Supported variables are APP_CACHE, APP_CONFIG, APP_SHARED_DATA,
# APP_LOCAL_DATA, and USER_HOME.
[storage]
cache_dir = "${APP_CACHE}"
state_dir = "${APP_LOCAL_DATA}"

# Replacement values for consensus parameters.  This is an advanced option
# and you probably should leave it alone. Not all parameters are supported.
# These are case-sensitive.
#
#[override_net_params]
#circwindow = 1000
#min_paths_for_circs_pct = 60

# Configuration for timing when and how often we should download directory
# information.
#
# We use a randomized algorithm for determining when to retry. With
# the various retry_* options, "num" is the number of downloads to
# attempt, and "initial_delay" is a parameter determining both our
# _first_ delay before we reattempt, and our _minimum_ delay for
# subsequent attempts.
[download_schedule]

# How to retry our initial bootstrapping when we're trying to start up.
retry_bootstrap = { num = 128, initial_delay = "1 sec" }

# How to retry a single consensus download.
retry_consensus = { num = 3, initial_delay = "1 sec" }

# How to retry a set of authority certificate downloads.
retry_certs = { num = 3, initial_delay = "1 sec" }

# How to retry a set of microdescriptor downloads.
retry_microdescs = { num = 3, initial_delay = "1 sec" }
# How many microdescriptor fetches to launch at once.
microdesc_parallelism = 4
